FROM ycshu086/ubuntu-dotnetcore-opencv-opencvsharp-cuda-cudnn:0.1 AS build-env

WORKDIR /app

# Copy csproj and restore as distinct layers
COPY ./src/VAP/AML.Client/*.csproj ./AML.Client/
COPY ./src/VAP/AML.tfserving/*.csproj ./AML.tfserving/
COPY ./src/VAP/BGSObjectDetector/*.csproj ./BGSObjectDetector/
COPY ./src/VAP/Decoder/*.csproj ./Decoder/
COPY ./src/VAP/FramePreProcessor/*.csproj ./FramePreProcessor/
COPY ./src/VAP/LineDetector/*.csproj ./LineDetector/
COPY ./src/VAP/PostProcessor/*.csproj ./PostProcessor/
COPY ./src/VAP/TFDetector/*.csproj ./TFDetector/
COPY ./src/VAP/TFWrapper/*.csproj ./TFWrapper/
COPY ./src/VAP/Utils/*.csproj ./Utils/
COPY ./src/VAP/VideoPipelineCore/*.csproj ./VideoPipelineCore/
RUN dotnet restore ./AML.tfserving/
RUN dotnet restore ./AML.Client/
RUN dotnet restore ./BGSObjectDetector/
RUN dotnet restore ./Decoder/
RUN dotnet restore ./FramePreProcessor/
RUN dotnet restore ./PostProcessor/
RUN dotnet restore ./LineDetector/
RUN dotnet restore ./TFDetector/
RUN dotnet restore ./TFWrapper/
RUN dotnet restore ./Utils/
RUN dotnet restore ./VideoPipelineCore/

# Copy everything else and build
COPY ./src/VAP/AML.Client/ ./AML.Client/
COPY ./src/VAP/AML.tfserving/ ./AML.tfserving/
COPY ./src/VAP/BGSObjectDetector/ ./BGSObjectDetector/
COPY ./src/VAP/Decoder/ ./Decoder/
COPY ./src/VAP/DNNDetector/ ./DNNDetector/
COPY ./src/VAP/FramePreProcessor/ ./FramePreProcessor/
COPY ./src/VAP/LineDetector/ ./LineDetector/
COPY ./src/VAP/PostProcessor/ ./PostProcessor/
COPY ./src/VAP/TFDetector/ ./TFDetector/
COPY ./src/VAP/TFWrapper/ ./TFWrapper/
COPY ./src/VAP/Utils/ ./Utils/
COPY ./src/VAP/VideoPipelineCore/ ./VideoPipelineCore/
COPY ./cfg/imagenet-classes.json /cfg/imagenet-classes.json
RUN dotnet publish ./Utils/ -c Release -o out
RUN dotnet publish ./TFWrapper/ -c Release -o out
RUN dotnet publish ./DNNDetector/ -c Release -o out
RUN dotnet publish ./BGSObjectDetector/ -c Release -o out
RUN dotnet publish ./AML.tfserving/ -c Release -o out
RUN dotnet publish ./TFDetector/ -c Release -o out
RUN dotnet publish ./Decoder/ -c Release -o out
RUN dotnet publish ./FramePreProcessor/ -c Release -o out
RUN dotnet publish ./AML.Client/ -c Release -o out
RUN dotnet publish ./PostProcessor/ -c Release -o out
RUN dotnet publish ./LineDetector/ -c Release -o out
RUN dotnet publish ./VideoPipelineCore/ -c Release -o out

# Build runtime image
# FROM dbeeva.azurecr.io/base-opencvsharp-18.04-cuda-cudnn:1
FROM dbeeva.azurecr.io/ubuntu-dotnetcore-opencv-opencvsharp-cuda-cudnn:0.1
WORKDIR /app
COPY --from=build-env /app/Utils/out .
COPY --from=build-env /app/TFWrapper/out .
COPY --from=build-env /app/DNNDetector/out .
COPY --from=build-env /app/BGSObjectDetector/out .
COPY --from=build-env /app/AML.tfserving/out .
COPY --from=build-env /app/TFDetector/out .
COPY --from=build-env /app/Decoder/out .
COPY --from=build-env /app/PostProcessor/out .
COPY --from=build-env /app/LineDetector/out .
COPY --from=build-env /app/FramePreProcessor/out .
COPY --from=build-env /app/AML.Client/out .
COPY --from=build-env /app/VideoPipelineCore/out .
COPY ./cfg ./cfg
COPY ./media ./media
COPY ./src/VAP/TFWrapper/packages/TensorFlowSharp.1.12.0/runtimes/linux/native/libtensorflow.so /usr/local/lib
COPY ./src/VAP/TFWrapper/packages/TensorFlowSharp.1.12.0/runtimes/linux/native/libtensorflow.so .
COPY ./src/VAP/TFWrapper/packages/TensorFlowSharp.1.12.0/runtimes/linux/native/libtensorflow_framework.so /usr/local/lib
COPY ./src/VAP/TFWrapper/packages/TensorFlowSharp.1.12.0/runtimes/linux/native/libtensorflow_framework.so .
RUN cp /opencvsharp/make/OpenCvSharpExtern/libOpenCvSharpExtern.so /usr/local/lib
RUN cp /opencvsharp/make/OpenCvSharpExtern/libOpenCvSharpExtern.so .
RUN apt-get update && apt-get install -y libgdiplus
RUN cd /usr/lib
RUN ln -s libgdiplus.so gdiplus.dll
RUN export LD_LIBRARY_PATH="/lib:/usr/lib:/usr/local/lib"

ENTRYPOINT ["dotnet", "VideoPipelineCore.dll"]
